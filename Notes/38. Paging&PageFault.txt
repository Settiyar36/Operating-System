2. Paging
Definition: Paging is a memory management technique where physical memory (RAM) is divided into fixed-size blocks called pages, and virtual memory is also divided into blocks of the same size called page frames.
How it Works:
The OS uses a page table to map virtual addresses to physical addresses.
When a program accesses a memory address, the OS checks the page table to see if the page is in RAM. If not, a page fault occurs and the page is loaded from the disk.
Benefits: Helps eliminate external fragmentation, as pages can be placed anywhere in RAM.
Example: If a program needs 100 MB of memory but only 50 MB is available, the system can load data in smaller chunks and swap pages in and out of disk storage as needed.
3. Page Fault
Definition: A page fault happens when a program tries to access a page that is not currently loaded into RAM.
How it Works:
The OS detects the page fault and fetches the required page from disk (usually from swap space or a page file).
After loading the page, the program continues execution.
Impact: Page faults can slow down the system because accessing data from disk is much slower than accessing data from RAM.
Example: If a program tries to use memory that is currently swapped out to disk, the operating system will need to load it back into memory.
