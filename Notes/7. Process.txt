PROCESS:
----------------------------
    A process is simply a program in execution. 
    When you run an application (like opening a web browser or playing a game), that program becomes a process on your computer.

Basic Definition:
    A process is a running instance of a program, which includes the program's code, its current activity, and resources it needs 
    to perform its tasks.

Key Sections of a Process:
--------------------------------
    A process is made up of several important sections or components that allow it to run and interact with the system.
     Here’s a simple breakdown of each section:

    1. Program Code (Text Section):

        What it is: This section contains the actual code or instructions of the program.
        Example: If you’re running a web browser, the program code section would contain the instructions that make the browser open,
         load websites, and interact with users.
    
    2. Data Section:

        What it is: This section holds the global and static variables used by the program. 
        These variables are initialized when the program starts and maintain their values throughout the life of the process.
        Example:   If the program has a counter that keeps track of how many pages you've visited, that counter would be stored here.

    3. Stack Section:
        
        What it is: This section is used for managing function calls and local variables. 
        Every time a function is called, it gets added to the stack. 
        When the function is finished, it is removed from the stack.
        Example: If you have a function that calculates your age based on your birth year, the stack would hold information 
        about that function, like local variables used in the calculation.

    4. Heap Section:

        What it is: The heap is used for dynamic memory allocation, meaning it stores memory that is allocated during the
         runtime of the process (i.e., memory requested by the program while it's running).
        Example: If a program asks the operating system for memory to store a list of user names, that memory will come from the heap.

    5. Process Control Block (PCB):

        What it is: Although not technically part of the process itself, the PCB is a data structure in the operating system 
        that holds all the information needed to manage the process, such as its state, program counter, and memory allocation.
        Example: The PCB keeps track of which process is currently running and its resources, like CPU time, memory, and I/O operations.