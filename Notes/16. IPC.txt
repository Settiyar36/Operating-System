IPC: INTER PROCESS COMMUNICATION:
----------------------------------------

    IPC (Inter-Process Communication) refers to the mechanisms or methods that allow different processes to 
        communicate with each other, share data, and synchronize their actions.
    --> Since processes are independent and isolated, they need a way to exchange information and coordinate tasks,
        especially in multiprocessing or distributed systems.
    --> IPC is important because, without it, processes can't share resources, coordinate their actions,
         or communicate effectively.

Types of IPC:
--------------------

    IPC can be classified based on how processes communicate, i.e., whether they share memory or use messages.
    Here are the common types of IPC:

    IPC Types: Unicast and Multicast
        In terms of communication patterns, IPC can be classified as unicast or multicast depending on how messages
         are delivered between processes:

1. Unicast:
------------------
    Unicast communication involves sending a message from one source process to one destination process.

    Example: Process A sends a message to Process B. Only Process B receives the message.
    
    Use case: When you need point-to-point communication between two processes, like a client-server model 
             where a client communicates with a single server.

2. Multicast:
---------------------
    Multicast communication involves sending a message from one source process to multiple destination processes at the same time.

    Example: Process A sends a message to multiple processes (B, C, and D) simultaneously.

    Use case: When one process needs to send the same message to multiple processes, such as broadcasting updates 
                or notifications to many subscribers.


